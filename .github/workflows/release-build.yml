name: release-build

on:
  release:
    types: [created]

jobs:
  build-native:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    steps:
      - uses: actions/checkout@v3
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17.0.8'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
          components: 'native-image'
      - name: Grant execute permission for mvnw
        run: chmod +x mvnw
      - name: Build Native
        run: ./mvnw package -Pnative -Drevision="${{ github.event.release.tag_name }}"
      - name: Upload Native Image
        id: upload-native-image
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./target/cert-jwk-${{ github.event.release.tag_name }}-runne*
          asset_name: cert2jwk-${{ github.event.release.tag_name }}-${{ matrix.os }}
          asset_content_type: application/octet-stream
          asset_label: ${{ matrix.os }}
  build-jvm:
    runs-on: ubuntu-latest
    name: Build jvm
    steps:
      - uses: actions/checkout@v3
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17.0.8'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
          components: 'native-image'
      - name: Grant execute permission for mvnw
        run: chmod +x mvnw
      - name: Build JVM
        run: ./mvnw package -Dquarkus.package.type=uber-jar -Drevision="${{ github.event.release.tag_name }}"
      - name: Upload JVM JAR
        id: upload-jar
        if: ${{ !env.ACT }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./target/cert-jwk-${{ github.event.release.tag_name }}-runner.jar
          asset_name: cert2jwk-${{ github.event.release.tag_name }}.jar
          asset_content_type: application/octet-stream